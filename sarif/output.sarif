{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "ACME Source Code Scanner",
          "rules": [
            {
              "id": "TEST01 cwe 613",
              "name": "Test 01 rule CWE_425 name",
              "messageStrings": {
                "default": {
                  "text": "This is the message text. It might be very long."
                }
              },
              "shortDescription": {
                "text": "Failed to release dynamic memory, but not really because this is CWE 89. Yes really."
              },
              "fullDescription": {
                "text": "Unused variables, imports, functions or classes may be a symptom of a bug and should be examined carefully."
              },
              "help": {
                "text": "some help text"
              },
              "properties": {
                "tags": [
                  "AAA",
                  "BBB",
                  "CWE: 22",
                  "DDD"
                ]
              }
            },
            {
              "id": "TEST02",
              "name": "Test 02 rule name",
              "messageStrings": {
                "default": {
                  "text": "aaa"
                }
              },
              "shortDescription": {
                "text": "Code injection"
              },
              "fullDescription": {
                "text": "Interpreting unsanitized user input as code allows a malicious user arbitrary code execution."
              },
              "help": {
                "text": "Some text here some text here",
                "markdown": "Directly evaluating user input (for example, an HTTP request parameter) as code without properly sanitizing the input first allows an attacker arbitrary code execution. This can occur when user input is treated as JavaScript, or passed to a framework which interprets it as an expression to be evaluated. Examples include AngularJS expressions or JQuery selectors.\n\n## Recommendation\n\nAvoid including user input in any expression which may be dynamically evaluated. If user input must be included, use context-specific escaping before including it. It is important that the correct escaping is used for the type of evaluation that will occur.\n\n## Example\n\nThe following example shows part of the page URL being evaluated as JavaScript code. This allows an attacker to provide JavaScript within the URL. If an attacker can persuade a user to click on a link to such a URL, the attacker can evaluate arbitrary JavaScript in the browser of the user to, for example, steal cookies containing session information.\n\n```javascript\neval(document.location.href.substring(document.location.href.indexOf(\"default=\")+8))\n```\n\n## References\n\n* OWASP: [Code Injection](https://www.owasp.org/index.php/Code_Injection).\n* Wikipedia: [Code Injection](https://en.wikipedia.org/wiki/Code_injection).\n* Common Weakness Enumeration: [CWE-94](https://cwe.mitre.org/data/definitions/94.html).\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html).\n* Common Weakness Enumeration: [CWE-116](https://cwe.mitre.org/data/definitions/116.html)."
              }
            },
            {
              "id": "TEST03",
              "name": "Test 03 rule name",
              "messageStrings": {
                "default": {
                  "text": "aaa"
                }
              },
              "shortDescription": {
                "text": "SQLi somewhere"
              },
              "fullDescription": {
                "text": "This issue has come up again and there are both CSRF and Ssrf in the app"
              },
              "help": {
                "text": "Some text here some text here",
                "markdown": "How could this be? A Use-After-Free vuln in Java? Directly evaluating user input (for example, an HTTP request parameter) as code without properly sanitizing the input first allows an attacker arbitrary code execution. This can occur when user input is treated as JavaScript, or passed to a framework which interprets it as an expression to be evaluated. Examples include AngularJS expressions or JQuery selectors.\n\n## Recommendation\n\nAvoid including user input in any expression which may be dynamically evaluated. If user input must be included, use context-specific escaping before including it. It is important that the correct escaping is used for the type of evaluation that will occur.\n\n## Example\n\nThe following example shows part of the page URL being evaluated as JavaScript code. This allows an attacker to provide JavaScript within the URL. If an attacker can persuade a user to click on a link to such a URL, the attacker can evaluate arbitrary JavaScript in the browser of the user to, for example, steal cookies containing session information.\n\n```javascript\neval(document.location.href.substring(document.location.href.indexOf(\"default=\")+8))\n```\n\n## References\n\n* OWASP: [Code Injection](https://www.owasp.org/index.php/Code_Injection).\n* Wikipedia: [Code Injection](https://en.wikipedia.org/wiki/Code_injection).\n* Common Weakness Enumeration: [CWE-94](https://cwe.mitre.org/data/definitions/94.html).\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html).\n* Common Weakness Enumeration: [CWE-116](https://cwe.mitre.org/data/definitions/116.html)."
              }
            },
            {
              "id": "zzzzzzzzz not referenced",
              "name": "CWE 1 CWE 2 CWE 3 CWE 4",
              "messageStrings": {
                "default": {
                  "text": "This is the message text. It might be very long."
                }
              },
              "shortDescription": {
                "text": "Failed to release dynamic memory, but not really because this is CWE 89. Yes really."
              },
              "fullDescription": {
                "text": "CWE 5 CWE 6 CWE 7 CWE 8 CWE 9 CWE 10 CWE 11 CWE 12 CWE 13 CWE 14 CWE 15 CWE 16 CWE 17 CWE 18 CWE 19 CWE 20 CWE 21 CWE 22 CWE 23 CWE 24 CWE 25 CWE 26 CWE 27 CWE 28 CWE 29 CWE 30 CWE 31 CWE 32 CWE 33 CWE 34 CWE 35 CWE 36 CWE 37 CWE 38 CWE 39 CWE 40 CWE 41 CWE 42 CWE 43 CWE 44 CWE 45 CWE 46 CWE 47 CWE 48 CWE 49 CWE 50 CWE 51 CWE 52 CWE 53 CWE 54 CWE 55 CWE 56 CWE 57 CWE 58 CWE 59 CWE 60 CWE 61 CWE 62 CWE 63 CWE 64 CWE 65 CWE 66 CWE 67 CWE 68 CWE 69 CWE 70 CWE 71 CWE 72 CWE 73 CWE 74 CWE 75 CWE 76 CWE 77 CWE 78 CWE 79 CWE 80 CWE 81 CWE 82 CWE 83 CWE 84 CWE 85 CWE 86 CWE 87 CWE 88 CWE 89 CWE 90 CWE 91 CWE 92 CWE 93 CWE 94 CWE 95 CWE 96 CWE 97 CWE 98 CWE 99 CWE 100 CWE 101 CWE 102 CWE 103 CWE 104 CWE 105 CWE 106 CWE 107 CWE 108 CWE 109 CWE 110 CWE 111 CWE 112 CWE 113 CWE 114 CWE 115 CWE 116 CWE 117 CWE 118 CWE 119 CWE 120 CWE 121 CWE 122 CWE 123 CWE 124 CWE 125 CWE 126 CWE 127 CWE 128 CWE 129 CWE 130 CWE 131 CWE 132 CWE 133 CWE 134 CWE 135 CWE 136 CWE 137 CWE 138 CWE 139 CWE 140 CWE 141 CWE 142 CWE 143 CWE 144 CWE 145 CWE 146 CWE 147 CWE 148 CWE 149 CWE 150 CWE 151 CWE 152 CWE 153 CWE 154 CWE 155 CWE 156 CWE 157 CWE 158 CWE 159 CWE 160 CWE 161 CWE 162 CWE 163 CWE 164 CWE 165 CWE 166 CWE 167 CWE 168 CWE 169 CWE 170 CWE 171 CWE 172 CWE 173 CWE 174 CWE 175 CWE 176 CWE 177 CWE 178 CWE 179 CWE 180 CWE 181 CWE 182 CWE 183 CWE 184 CWE 185 CWE 186 CWE 187 CWE 188 CWE 189 CWE 190 CWE 191 CWE 192 CWE 193 CWE 194 CWE 195 CWE 196 CWE 197 CWE 198 CWE 199 CWE 200 CWE 201 CWE 202 CWE 203 CWE 204 CWE 205 CWE 206 CWE 207 CWE 208 CWE 209 CWE 210 CWE 211 CWE 212 CWE 213 CWE 214 CWE 215 CWE 216 CWE 217 CWE 218 CWE 219 CWE 220 CWE 221 CWE 222 CWE 223 CWE 224 CWE 225 CWE 226 CWE 227 CWE 228 CWE 229 CWE 230 CWE 231 CWE 232 CWE 233 CWE 234 CWE 235 CWE 236 CWE 237 CWE 238 CWE 239 CWE 240 CWE 241 CWE 242 CWE 243 CWE 244 CWE 245 CWE 246 CWE 247 CWE 248 CWE 249 CWE 250 CWE 251 CWE 252 CWE 253 CWE 254 CWE 255 CWE 256 CWE 257 CWE 258 CWE 259 CWE 260 CWE 261 CWE 262 CWE 263 CWE 264 CWE 265 CWE 266 CWE 267 CWE 268 CWE 269 CWE 270 CWE 271 CWE 272 CWE 273 CWE 274 CWE 275 CWE 276 CWE 277 CWE 278 CWE 279 CWE 280 CWE 281 CWE 282 CWE 283 CWE 284 CWE 285 CWE 286 CWE 287 CWE 288 CWE 289 CWE 290 CWE 291 CWE 292 CWE 293 CWE 294 CWE 295 CWE 296 CWE 297 CWE 298 CWE 299 CWE 300 CWE 301 CWE 302 CWE 303 CWE 304 CWE 305 CWE 306 CWE 307 CWE 308 CWE 309 CWE 310 CWE 311 CWE 312 CWE 313 CWE 314 CWE 315 CWE 316 CWE 317 CWE 318 CWE 319 CWE 320 CWE 321 CWE 322 CWE 323 CWE 324 CWE 325 CWE 326 CWE 327 CWE 328 CWE 329 CWE 330 CWE 331 CWE 332 CWE 333 CWE 334 CWE 335 CWE 336 CWE 337 CWE 338 CWE 339 CWE 340 CWE 341 CWE 342 CWE 343 CWE 344 CWE 345 CWE 346 CWE 347 CWE 348 CWE 349 CWE 350 CWE 351 CWE 352 CWE 353 CWE 354 CWE 355 CWE 356 CWE 357 CWE 358 CWE 359 CWE 360 CWE 361 CWE 362 CWE 363 CWE 364 CWE 365 CWE 366 CWE 367 CWE 368 CWE 369 CWE 370 CWE 371 CWE 372 CWE 373 CWE 374 CWE 375 CWE 376 CWE 377 CWE 378 CWE 379 CWE 380 CWE 381 CWE 382 CWE 383 CWE 384 CWE 385 CWE 386 CWE 387 CWE 388 CWE 389 CWE 390 CWE 391 CWE 392 CWE 393 CWE 394 CWE 395 CWE 396 CWE 397 CWE 398 CWE 399 CWE 400 CWE 401 CWE 402 CWE 403 CWE 404 CWE 405 CWE 406 CWE 407 CWE 408 CWE 409 CWE 410 CWE 411 CWE 412 CWE 413 CWE 414 CWE 415 CWE 416 CWE 417 CWE 418 CWE 419 CWE 420 CWE 421 CWE 422 CWE 423 CWE 424 CWE 425 CWE 426 CWE 427 CWE 428 CWE 429 CWE 430 CWE 431 CWE 432 CWE 433 CWE 434 CWE 435 CWE 436 CWE 437 CWE 438 CWE 439 CWE 440 CWE 441 CWE 442 CWE 443 CWE 444 CWE 445 CWE 446 CWE 447 CWE 448 CWE 449 CWE 450 CWE 451 CWE 452 CWE 453 CWE 454 CWE 455 CWE 456 CWE 457 CWE 458 CWE 459 CWE 460 CWE 461 CWE 462 CWE 463 CWE 464 CWE 465 CWE 466 CWE 467 CWE 468 CWE 469 CWE 470 CWE 471 CWE 472 CWE 473 CWE 474 CWE 475 CWE 476 CWE 477 CWE 478 CWE 479 CWE 480 CWE 481 CWE 482 CWE 483 CWE 484 CWE 485 CWE 486 CWE 487 CWE 488 CWE 489 CWE 490 CWE 491 CWE 492 CWE 493 CWE 494 CWE 495 CWE 496 CWE 497 CWE 498 CWE 499 CWE 500 CWE 501 CWE 502 CWE 503 CWE 504 CWE 505 CWE 506 CWE 507 CWE 508 CWE 509 CWE 510 CWE 511 CWE 512 CWE 513 CWE 514 CWE 515 CWE 516 CWE 517 CWE 518 CWE 519 CWE 520 CWE 521 CWE 522 CWE 523 CWE 524 CWE 525 CWE 526 CWE 527 CWE 528 CWE 529 CWE 530 CWE 531 CWE 532 CWE 533 CWE 534 CWE 535 CWE 536 CWE 537 CWE 538 CWE 539 CWE 540 CWE 541 CWE 542 CWE 543 CWE 544 CWE 545 CWE 546 CWE 547 CWE 548 CWE 549 CWE 550 CWE 551 CWE 552 CWE 553 CWE 554 CWE 555 CWE 556 CWE 557 CWE 558 CWE 559 CWE 560 CWE 561 CWE 562 CWE 563 CWE 564 CWE 565 CWE 566 CWE 567 CWE 568 CWE 569 CWE 570 CWE 571 CWE 572 CWE 573 CWE 574 CWE 575 CWE 576 CWE 577 CWE 578 CWE 579 CWE 580 CWE 581 CWE 582 CWE 583 CWE 584 CWE 585 CWE 586 CWE 587 CWE 588 CWE 589 CWE 590 CWE 591 CWE 592 CWE 593 CWE 594 CWE 595 CWE 596 CWE 597 CWE 598 CWE 599 CWE 600 CWE 601 CWE 602 CWE 603 CWE 604 CWE 605 CWE 606 CWE 607 CWE 608 CWE 609 CWE 610 CWE 611 CWE 612 CWE 613 CWE 614 CWE 615 CWE 616 CWE 617 CWE 618 CWE 619 CWE 620 CWE 621 CWE 622 CWE 623 CWE 624 CWE 625 CWE 626 CWE 627 CWE 628 CWE 629 CWE 630 CWE 631 CWE 632 CWE 633 CWE 634 CWE 635 CWE 636 CWE 637 CWE 638 CWE 639 CWE 640 CWE 641 CWE 642 CWE 643 CWE 644 CWE 645 CWE 646 CWE 647 CWE 648 CWE 649 CWE 650 CWE 651 CWE 652 CWE 653 CWE 654 CWE 655 CWE 656 CWE 657 CWE 658 CWE 659 CWE 660 CWE 661 CWE 662 CWE 663 CWE 664 CWE 665 CWE 666 CWE 667 CWE 668 CWE 669 CWE 670 CWE 671 CWE 672 CWE 673 CWE 674 CWE 675 CWE 676 CWE 677 CWE 678 CWE 679 CWE 680 CWE 681 CWE 682 CWE 683 CWE 684 CWE 685 CWE 686 CWE 687 CWE 688 CWE 689 CWE 690 CWE 691 CWE 692 CWE 693 CWE 694 CWE 695 CWE 696 CWE 697 CWE 698 CWE 699 CWE 700 CWE 701 CWE 702 CWE 703 CWE 704 CWE 705 CWE 706 CWE 707 CWE 708 CWE 709 CWE 710 CWE 711 CWE 712 CWE 713 CWE 714 CWE 715 CWE 716 CWE 717 CWE 718 CWE 719 CWE 720 CWE 721 CWE 722 CWE 723 CWE 724 CWE 725 CWE 726 CWE 727 CWE 728 CWE 729 CWE 730 CWE 731 CWE 732 CWE 733 CWE 734 CWE 735 CWE 736 CWE 737 CWE 738 CWE 739 CWE 740 CWE 741 CWE 742 CWE 743 CWE 744 CWE 745 CWE 746 CWE 747 CWE 748 CWE 749 CWE 750 CWE 751 CWE 752 CWE 753 CWE 754 CWE 755 CWE 756 CWE 757 CWE 758 CWE 759 CWE 760 CWE 761 CWE 762 CWE 763 CWE 764 CWE 765 CWE 766 CWE 767 CWE 768 CWE 769 CWE 770 CWE 771 CWE 772 CWE 773 CWE 774 CWE 775 CWE 776 CWE 777 CWE 778 CWE 779 CWE 780 CWE 781 CWE 782 CWE 783 CWE 784 CWE 785 CWE 786 CWE 787 CWE 788 CWE 789 CWE 790 CWE 791 CWE 792 CWE 793 CWE 794 CWE 795 CWE 796 CWE 797 CWE 798 CWE 799 CWE 800 CWE 801 CWE 802 CWE 803 CWE 804 CWE 805 CWE 806 CWE 807 CWE 808 CWE 809 CWE 810 CWE 811 CWE 812 CWE 813 CWE 814 CWE 815 CWE 816 CWE 817 CWE 818 CWE 819 CWE 820 CWE 821 CWE 822 CWE 823 CWE 824 CWE 825 CWE 826 CWE 827 CWE 828 CWE 829 CWE 830 CWE 831 CWE 832 CWE 833 CWE 834 CWE 835 CWE 836 CWE 837 CWE 838 CWE 839 CWE 840 CWE 841 CWE 842 CWE 843 CWE 844 CWE 845 CWE 846 CWE 847 CWE 848 CWE 849 CWE 850 CWE 851 CWE 852 CWE 853 CWE 854 CWE 855 CWE 856 CWE 857 CWE 858 CWE 859 CWE 860 CWE 861 CWE 862 CWE 863 CWE 864 CWE 865 CWE 866 CWE 867 CWE 868 CWE 869 CWE 870 CWE 871 CWE 872 CWE 873 CWE 874 CWE 875 CWE 876 CWE 877 CWE 878 CWE 879 CWE 880 CWE 881 CWE 882 CWE 883 CWE 884 CWE 885 CWE 886 CWE 887 CWE 888 CWE 889 CWE 890 CWE 891 CWE 892 CWE 893 CWE 894 CWE 895 CWE 896 CWE 897 CWE 898 CWE 899 CWE 900 CWE 901 CWE 902 CWE 903 CWE 904 CWE 905 CWE 906 CWE 907 CWE 908 CWE 909 CWE 910 CWE 911 CWE 912 CWE 913 CWE 914 CWE 915 CWE 916 CWE 917 CWE 918 CWE 919 CWE 920 CWE 921 CWE 922 CWE 923 CWE 924 CWE 925 CWE 926 CWE 927 CWE 928 CWE 929 CWE 930 CWE 931 CWE 932 CWE 933 CWE 934 CWE 935 CWE 936 CWE 937 CWE 938 CWE 939 CWE 940 CWE 941 CWE 942 CWE 943 CWE 944 CWE 945 CWE 946 CWE 947 CWE 948 CWE 949 CWE 950 CWE 951 CWE 952 CWE 953 CWE 954 CWE 955 CWE 956 CWE 957 CWE 958 CWE 959 CWE 960 CWE 961 CWE 962 CWE 963 CWE 964 CWE 965 CWE 966 CWE 967 CWE 968 CWE 969 CWE 970 CWE 971 CWE 972 CWE 973 CWE 974 CWE 975 CWE 976 CWE 977 CWE 978 CWE 979 CWE 980 CWE 981 CWE 982 CWE 983 CWE 984 CWE 985 CWE 986 CWE 987 CWE 988 CWE 989 CWE 990 CWE 991 CWE 992 CWE 993 CWE 994 CWE 995 CWE 996 CWE 997 CWE 998 CWE 999"
              },
              "help": {
                "text": "some help text"
              },
              "properties": {
                "tags": [
                  "AAA",
                  "BBB",
                  "CWE: 22",
                  "DDD"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "TEST01 cwe 613",
          "level": "warning",
          "message": {
            "text": "Result text 003. This result does not have a rule associated."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app.js"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 3,
                  "endColumn": 9
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "39fa2ee980eb94b3:1"
          }
        },
        {
          "ruleId": "TEST02",
          "level": "error",
          "message": {
            "text": "User-provided value flows to here and is interpreted as code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app.js"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 5,
                  "endColumn": 57
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "39fa2ee98bebd4d1:1"
          }
        },
        {
          "ruleId": "TEST03",
          "level": "note",
          "message": {
            "text": "blargh blargh blargh"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app.js"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 5,
                  "endColumn": 57
                }
              }
            }
          ],
          "partialFingerprints": {
            "primaryLocationLineHash": "39fa2eed8bebd4d1:1"
          }
        }
      ]
    }
  ]
}
